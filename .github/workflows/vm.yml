name: Deploy to EC2 on Every push to master branch

on:
  push:
    branches:
      - master

jobs:
  deploy-app:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ vars.PORT }}
          JWT_SECRET_USER: ${{ secrets.JWT_SECRET_USER }}
          JWT_SECRET_ADMIN: ${{ secrets.JWT_SECRET_ADMIN }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.60.168.88 << 'EOF'
            sudo rm -rf LearnSphere
            git clone https://github.com/doomerdpk-1802/LearnSphere.git
            cd LearnSphere

            npm install

            echo "DATABASE_URL=$DATABASE_URL" > .env
            echo "PORT=$PORT" >> .env
            echo "JWT_SECRET_USER=$JWT_SECRET_USER" >> .env
            echo "JWT_SECRET_ADMIN=$JWT_SECRET_ADMIN" >> .env

            cd src
            npm run stop:pm2 || true
            npm run start:pm2
          EOF

  deploy-nginx:
    runs-on: ubuntu-latest
    needs: deploy-app
    if: contains(join(fromJSON(toJSON(github.event.commits)).*.modified), 'ops/nginx/nginx.conf')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy nginx config & SSL
        env:
          DOMAIN: learnsphere.deepak.cfd
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.60.168.88 << 'EOF'
            cd LearnSphere

            # Copy nginx config
            sudo cp ./ops/nginx/nginx.conf /etc/nginx/nginx.conf
            sudo nginx -t
            sudo systemctl restart nginx

            # Install certbot if not already installed
            sudo apt-get update -y
            sudo apt-get install -y certbot python3-certbot-nginx

            # Request or renew SSL cert
            sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --register-unsafely-without-email
          EOF
