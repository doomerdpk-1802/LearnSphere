name: Full Deploy Workflow

on:
  push:
    branches:
      - master

jobs:
  deploy-app:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    outputs:
      app_deployed: ${{ steps.deploy_app.outcome }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        id: deploy_app
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ vars.PORT }}
          JWT_SECRET_USER: ${{ secrets.JWT_SECRET_USER }}
          JWT_SECRET_ADMIN: ${{ secrets.JWT_SECRET_ADMIN }}
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.51.176.19 << 'EOF'
            sudo rm -rf LearnSphere
            git clone https://github.com/doomerdpk-1802/LearnSphere.git
            cd LearnSphere

            npm install

            echo "DATABASE_URL=$DATABASE_URL" > .env
            echo "PORT=$PORT" >> .env
            echo "JWT_SECRET_USER=$JWT_SECRET_USER" >> .env
            echo "JWT_SECRET_ADMIN=$JWT_SECRET_ADMIN" >> .env

            cd src
            npm run stop:pm2 || true
            npm run start:pm2
          EOF

  deploy-nginx:
    needs: deploy-app
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect if nginx.conf changed
        id: check_nginx
        run: |
          git fetch origin master
          if git diff --name-only origin/master~1 origin/master | grep -q '^ops/nginx/nginx.conf'; then
            echo "NGINX_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Skip if nginx.conf not changed
        if: env.NGINX_CHANGED != 'true'
        run: |
          echo "nginx.conf not changed. Skipping deployment."

      - name: Setup SSH key
        if: env.NGINX_CHANGED == 'true'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy nginx config & SSL
        if: env.NGINX_CHANGED == 'true'
        env:
          DOMAIN: learnsphere.deepak.cfd
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.60.168.88 << EOF
            cd /home/ubuntu/LearnSphere
            sudo cp ./ops/nginx/nginx.conf /etc/nginx/nginx.conf
            sudo nginx -t && sudo systemctl reload nginx

            if ! command -v certbot >/dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y certbot python3-certbot-nginx
            fi

            sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --register-unsafely-without-email
          EOF

  deploy-nginx-vercel:
    needs: deploy-app
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect if nginx-vercel.conf changed
        id: check_nginx_vercel
        run: |
          git fetch origin master
          if git diff --name-only origin/master~1 origin/master | grep -q '^ops/nginx/nginx-vercel.conf'; then
            echo "NGINX_VERSEL_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Skip if nginx-vercel.conf not changed
        if: env.NGINX_VERSEL_CHANGED != 'true'
        run: |
          echo "nginx-vercel.conf not changed. Skipping deployment."

      - name: Setup SSH key
        if: env.NGINX_VERSEL_CHANGED == 'true'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy nginx-vercel config & SSL
        if: env.NGINX_VERSEL_CHANGED == 'true'
        env:
          DOMAIN: learnsphere-vercel.api.deepak.cfd
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.60.168.88 << EOF
            cd /home/ubuntu/LearnSphere
            sudo cp ./ops/nginx/nginx-vercel.conf /etc/nginx/nginx.conf
            sudo nginx -t && sudo systemctl reload nginx

            if ! command -v certbot >/dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y certbot python3-certbot-nginx
            fi

            sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --register-unsafely-without-email
          EOF
